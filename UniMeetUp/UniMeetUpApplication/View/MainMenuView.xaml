<UserControl x:Class="UniMeetUpApplication.View.MainMenuView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:view="clr-namespace:UniMeetUpApplication.View"
             xmlns:viewModel="clr-namespace:UniMeetUpApplication.ViewModel"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro" 
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             Name="mainMenuUserControl"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="1000"
             >
    <UserControl.Background>
        <ImageBrush ImageSource="Images/geometry2.png" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,420,420" />
    </UserControl.Background>
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>

                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="/Resources/Icons.xaml" />

            </ResourceDictionary.MergedDictionaries>

            <DataTemplate DataType="{x:Type viewModel:CreateAccountViewModel}">
                <view:CreateAccountView DataContext="{Binding}"/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModel:AccountSettingsViewModel}">
                <view:AccountSettingsView DataContext="{Binding}"/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModel:AddMemberViewModel}">
                <view:AddMemberView DataContext="{Binding}"/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModel:ChatViewModel}">
                <view:ChatView DataContext="{Binding}"/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModel:FileRepoViewModel}">
                <view:FileRepoView DataContext="{Binding}"/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModel:GroupSettingsViewModel}">
                <view:GroupSettingsView DataContext="{Binding}"/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModel:MapsViewModel}">
                <view:MapsView DataContext="{Binding}"/>
            </DataTemplate>


            <view:MapsView x:Key="MapV"></view:MapsView>
            <view:CreateAccountView x:Key="CreateAccountV"></view:CreateAccountView>
            <viewModel:MainMenuViewModel x:Key="MainMenuViewModel"></viewModel:MainMenuViewModel>

        </ResourceDictionary>

    </UserControl.Resources>
    <!--<UserControl.Resources>

       
        --><!--a--><!--
        <ControlTemplate x:Key="TextBoxBaseControlTemplate" TargetType="{x:Type TextBoxBase}">
            <Border Background="{TemplateBinding Background}" 
                    x:Name="Bd" BorderBrush="Black"
                    BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                <ScrollViewer x:Name="PART_ContentHost"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
                <Trigger Property="Width" Value="Auto">
                    <Setter Property="MinWidth" Value="100"/>
                </Trigger>
                <Trigger Property="Height" Value="Auto">
                    <Setter Property="MinHeight" Value="20"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </UserControl.Resources>-->

   

    <Grid ShowGridLines="False" DataContext="{StaticResource MainMenuViewModel}">
        
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition></RowDefinition>
           
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition Width="40"></ColumnDefinition>
        </Grid.ColumnDefinitions>
<!--<Rectangle.OpacityMask>
                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_cupcake}" />
            </Rectangle.OpacityMask>-->
        <!--Search field-->
        <!--<TextBox Grid.Row="0" Grid.Column="0" GotKeyboardFocus="TxbSearch_OnGotKeyboardFocus" Template="{StaticResource TextBoxBaseControlTemplate}" Name="txbSearch" Text="Search"  BorderBrush="AliceBlue" ></TextBox>-->

        <TextBox  Margin="5,5,5,5" Grid.Column="0" Grid.Row="0" Name="txbSearch" Controls:TextBoxHelper.Watermark="Search for groups..." Controls:TextBoxHelper.ClearTextButton="True" 
                  Style="{DynamicResource ButtonCommandMetroTextBox}" >


        </TextBox>
        


        <!--images/buttons:-->

        <Grid Grid.Row="1" Grid.Column="0" ShowGridLines="False">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="59*"/>
              </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                
                <RowDefinition></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>

            <!--Labels:-->


            <!--<TreeView Name="lbGroups" Grid.Row="2" Grid.Column="0"
                      ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.User.Groups}"
                      DisplayMemberPath="GroupName" SelectedValuePath="{Binding SelectedIndex}" SelectedItemChanged="LbGroups_OnSelectedItemChanged" >

            </TreeView>-->
            
    
            

            <ListView Name="lbGroups" Grid.Row="2" Grid.Column="0" 
                     ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.User.Groups}" 
                     IsSynchronizedWithCurrentItem="True" DisplayMemberPath="GroupName" Grid.ColumnSpan="2"
                     SelectedIndex="{Binding SelectedIndex}"
                     SelectedItem="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.User.Groups.CurrentGroup}"
                     SelectionChanged="LbGroups_OnSelectionChanged"
                     
                     >
                
            </ListView>

            <GroupBox Margin="5" Grid.Row="3" MaxHeight="200" Header="Users in group:" FontStyle="Italic"  Background="White">
               
                <ListView  FontStyle="Normal"  Name="GroupMembers"  Background="White" BorderThickness="0">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Focusable" Value="false" />
                            <Setter  Property="IsEnabled" Value="False" />
                    
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </GroupBox>




            <!--Labels:-->

            <DockPanel LastChildFill="False" Grid.ColumnSpan="2">
                <Label DockPanel.Dock="Left" FontWeight="Bold">Groups:</Label>

                <StackPanel Orientation="Horizontal" DockPanel.Dock="Right">
                    <Button Background="Transparent" BorderThickness="0" Click="Add_Group">
                        <Viewbox MaxHeight="20" DockPanel.Dock="Right" Width="30" >
                            <Frame Source="Images/Add_grey_16x.xaml"/>
                        </Viewbox>
                    </Button>
                </StackPanel>
            </DockPanel>
            <!--<Label Name="lNoCurrentGroups" Grid.Row="1" Content="No current groups" Visibility="Hidden" Grid.ColumnSpan="2"></Label>-->
            <!--DockPanel Grid.Row="0" Grid.Column="0">
                
                
            </DockPanel>-->
            <Separator Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"></Separator>
        </Grid>
        <StatusBar Grid.Row="2" Background="AliceBlue">
            <DockPanel>
                <StatusBarItem Content="Number of groups:" Opacity="0.5" ></StatusBarItem>
                <StatusBarItem Name="groupCount" Opacity="0.5" Content="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.User.Groups.Count}"></StatusBarItem>
            </DockPanel>
        </StatusBar>
        <!--Display name-->

        <StackPanel Grid.Row="3" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center">
            <Label Content="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.User.DisplayName}" FontWeight="Bold"></Label>
        </StackPanel>

        <!--User options-->

        <StackPanel Grid.Row="3" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center">
            <Button Background="Transparent" BorderThickness="0" Command="{Binding AccountSettingsCommand}">
                <Viewbox  DockPanel.Dock="Right" Width="25">
                    <Frame Source="Images/Ellipsis_16x.xaml"/>
                </Viewbox>
            </Button>

        </StackPanel>

        <!--fileClip-->

        <StackPanel Grid.Row="2" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center">
            <Viewbox MaxHeight="20" DockPanel.Dock="Right" Width="30">
                <!--<Viewbox.RenderTransform>
                    <RotateTransform Angle="25"></RotateTransform>
                </Viewbox.RenderTransform>-->
                <Frame Source="Images/Attach_16x.xaml" />

            </Viewbox>
        </StackPanel>

        <!--ButtonPaneRight-->

        <StackPanel Grid.Row="0" Grid.Column="2" VerticalAlignment="Center">
            <Button Background="Transparent" BorderThickness="0" Command="{Binding ChatCommand}"  Name="chatBttn" Loaded="disabelChatBeforeInGroup">
                <Viewbox DockPanel.Dock="Right" Height="25">
                    <Frame Source="Images/Message_16x.xaml" />
                </Viewbox>
            </Button>


        </StackPanel>

        <!--ButtonPaneRight-->
        <ContentControl  x:Name="ConControl" Grid.Column="1" Grid.RowSpan="3" Margin="0,5,0,0" Content="{Binding}" DataContext="{Binding CurrentPage}" ></ContentControl>
        <StackPanel Grid.Row="1" Grid.Column="2">
            <Button Background="Transparent" BorderThickness="0" Command="{Binding MapCommand}" Name="mapsBttn" Loaded="disableMapsBeforeINGroup" >
                <Viewbox DockPanel.Dock="Right" Height="30">
                    <Frame Source="Images/GeoLocation_16x.xaml" />
                </Viewbox>
            </Button>
            <Button Background="Transparent" BorderThickness="0" Command="{Binding AddMemberToGroupCommand}" Name="AddBttn" Loaded="disableAddBeforeInGroup">
                <Viewbox DockPanel.Dock="Right" Height="30">
                    <Frame Source="Images/AddUser_16x.xaml" />
                </Viewbox>
            </Button>
            <Separator></Separator>
            <Button Background="Transparent" BorderThickness="0" Command="{Binding FileRepoCommand}" Name="FileRepBttn" Loaded="disableRepoBeforeInGroup">
                <Viewbox DockPanel.Dock="Right">
                    <Frame Source="Images/Folder_16xSM.xaml" />
                </Viewbox>
            </Button>



        </StackPanel>

        <StatusBar Grid.Row="3" Grid.Column="1"  Background="Gainsboro" Opacity="0.4" Margin="0,5,0,5">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem>
               <Label>Current page: MainMenuView </Label>
                
                <!--<TextBlock Name="lblCursorPosition"/>-->
            </StatusBarItem>
            <Separator Grid.Column="1" />
            <StatusBarItem Grid.Column="2">
                <!--<TextBlock Text="Current font size: 14" />-->

                <Menu>
                    <MenuItem Header="Font &#8595;">
                        <MenuItem Header="_Smalll" Click="FontSmall"></MenuItem>
                        <MenuItem Header="_Normal" Click="FontNormal"></MenuItem>
                        <MenuItem Header="_Large" Click="FontLarge"></MenuItem>
                        <MenuItem Header="_Huge" Click="FontHuge"></MenuItem>
                </MenuItem>
                </Menu>
            </StatusBarItem>
            <Separator Grid.Column="3" />
            <StatusBarItem Grid.Column="4">
                <!--<ProgressBar Value="50" Width="90" Height="16" />-->
                <StackPanel Orientation="Horizontal" Name="spClock">
                    <TextBlock Margin="4,0" Name="tlbDate" Text="{Binding Path=Date}"></TextBlock>
                    <TextBlock Margin="4,0" Name="tlbTime" Text="{Binding Path=Time}"></TextBlock>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
        
        <Grid.Resources>
       
            <!--<Style TargetType="{x:Type TextBox}">
                <Setter Property="Margin" Value="5"/>
            </Style>-->
            <Style TargetType="{x:Type Viewbox}">
                <Setter Property="Margin" Value="3"/>
            </Style>
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="Margin" Value="5"/>
            </Style>
            <Style TargetType="{x:Type ListBoxItem}">
                <Setter Property="Margin" Value="0"/>
            </Style>
            <Style TargetType="{x:Type Button}">
                <Setter Property="Margin" Value="0"/>
            </Style>
            <Style TargetType="{x:Type Separator}">
                <Setter Property="Margin" Value="5"/>
            </Style>
            <!--<Style TargetType="{x:Type ListBox}">
                <Setter Property="Margin" Value="5"/>
            </Style>-->
            <Style TargetType="{x:Type ListView}">
                <Setter Property="Margin" Value="5"/>
            </Style>
            <!--<Style TargetType="{x:Type GroupBox}">
                <Setter Property="Margin" Value="5"/>
              
            </Style>-->
            <Style TargetType="{x:Type StatusBar}">
                <Setter Property="Margin" Value="5"/>
            </Style>
        </Grid.Resources>

       
    </Grid>


</UserControl>